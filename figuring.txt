I want the new dictionary 'trade_results_dict' where each stock symbol has a key:value pair which is a dataframe which looks something like this:

{'A': 							
Trade_Num	entry_date	exit_date	days_in_trade		win_loss	p_l	
1	3/12/2018	3/14/2018	2		1	150	
2	3/19/2018	3/21/2018	2		1	150	
3	3/27/2018	4/16/2018	20		-1	-100	
4	4/19/2018	4/20/2018	1		1	150	
5	5/2/2018	5/9/2018	7		-1	-100	
6	5/11/2018	5/12/2018	1		-1	-100	
7	5/14/2018	5/16/2018	2		-1	-100	
8	5/21/2018	5/30/2018	9		1	150	}


I just want to spot a valid trade entry when iterating the rows, by seeing if the 'target' value is positive. If it is, then the iteration has landed upon a valid trade entry. Thus, we have the entry date equal the current datetime index of where this iteration is.


I essentially want the loop to hop back to the entry place and then start searching for the next entry (when target and stop are both positive)
When it finds an entry, then it starts looking for c1 or c2 to be met. When they are met, it fills the data, and then hops back to the last entry row,
and begins searching for the next entry (when target and stop are both positive)



"You can simply use the index value of the corresponding row as the entry or exit date for the trade in the trade_results_df DataFrame."

 if row['target'] > 0 and row['stop'] > 0:

                    exit_date_index = price_and_trades_df.loc[row.name+pd.Timedelta(days=1):][c1].index
                    exit_date = exit_date_index.values[0]
                    days_in_trade = (exit_date - entry_date).days

                trade_results_df.loc[trade_num] = {'trade_num': trade_num,
                                'entry_date': entry_date, 
                                'exit_date': exit_date, 
                                'days_in_trade': days_in_trade, 
                                'win_loss': win_loss, 
                                'p_l': p_l}

                target_exit = (row['target'] <= row['open']) or (row['target'] <= row['high']) or (row['target'] <= row['low']) or (row['target'] <= row['close'])
                stop_exit = (row['stop'] >= row['open']) or (row['stop'] >= row['high']) or (row['stop'] >= row['low']) or (row['stop'] >= row['close'])


                    exit_date = pd.NaT
                    days_in_trade = np.NaN
                    win_loss = np.NaN
                    p_l = np.NaN


        trade_results_dict[symbol] = trade_results_df

    return trade_results_dict

trade_results_dict = create_trade_results_dict(price_and_trades_dict)


I need a loop that loops through the rows in price_and_trades_dict for each key (stock ticker), and finds the following data and stores it in another dictionary called 'entry_info_dict' with the following info:

pos_size
entry price
entry date
target price
stop price

THEN, I need a loop that iterates through the rows in price_and_trades_df, STARTING at the entry date of a trade (Where the 'target' value is positive and therefore exists), and finds the following data and stores it in a DataFrame called 'exit_info_df' with the following info:

exit_price (will be either target or stop value from other DataFrame, depending on which is hit first)
exit_date (When either target or stop is first hit)
days in trade (Easy subtraction of exit - entry date)
win_loss (-1 for stop hit, +1 for target hit)
p_l (-100 for stop hit, +150 for target hit)

Making sure we have all the pieces of info:

'pos_size'
'target price'
'stop price'
'entry_price'
'exit_price'
'entry_date'
'exit_date'
'days_in_trade' 
'win_loss' 
'p_l' 


