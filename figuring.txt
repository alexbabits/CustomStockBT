-graphs/visiuals (figure out how these work and how to implement them to show off your trade results stuff)
-sums of the columns (total # trades, total p_l for strategy, either per stock, or for all stocks, etc.)


In python 3.1.0 I made a function that creates a dictionary (trade_results_dict) which outputs data. I have to paste it in two chunks because there are too many columns:


"{'A':           entry_date       entry      target        stop  exit_price  \
 trade_num                                                              
 1         2018-05-09   64.922352   66.764064   63.694545   66.764064   
 2         2018-06-18   63.091650   64.760961   61.978776   61.978776   
 3         2018-08-17   63.244029   65.168834   61.960826   65.168834   
 4         2018-11-08   65.807315   68.568934   63.966237   63.966237   
 5         2018-11-21   65.487919   68.233980   63.657211   68.233980   
 6         2019-01-09   66.173834   69.498270   63.957543   69.498270   
 7         2019-06-21   71.112158   72.965384   69.876675   72.965384   
 8         2019-06-25   71.160765   72.966072   69.957228   72.966072   


             exit_date  days_in_trade  position_size  win_loss  p_l  
 trade_num                                                          
 1         2018-05-11              2    5287.663956         1  150  
 2         2018-06-19              1    5669.254217        -1 -100  
 3         2018-08-30             13    4928.606075         1  150  
 4         2018-11-12              4    3574.388849        -1 -100  
 5         2018-11-28              7    3577.191178         1  150  
 6         2019-01-18              9    2985.792310         1  150  
 7         2019-07-01             10    5755.815824         1  150  
 8         2019-07-01              6    5912.633927         1  150  "


So that is a small snippet showing one key (The stock symbol) and part of it's corresponding data frame which contains all the trade data. The 'trade_results_dict' actually houses 20 unique key:value pairs, which are 20 stock symbols, each with their data frames full of trading data corresponding to the stock.

It's pretty much a good finished product, and now I want to extract a few counts and sums and things of that nature from this dictionary. The goal is to get an understanding of how good or bad the trading strategy did.

Here are some things I think I want:

I want a sum of all the 'trade_num' to see how many trades were made. Perhaps labeled 'num_trades'. Example value: 929
I want a count of how many '1' integers there are in the 'win_loss' column. Perhaps labeled "num_win_trades". Example value: 387
I want a count of how many '-1' integers there are in the 'win_loss' column. Perhaps labeled "num_lost_trades". Example value: 542
I want a sum of all the 'win_loss' column values. Perhaps labeled "sum_trades". Example value: if using the same numbers as the counts, this for example would happen to be 387-542 = -155
I want a maximum value for the 'days_in_trade' column. Perhaps labeled "max_days". Example value: (69)
I want a minimum value for the 'days_in_trade' column. Perhaps labeled "min_days". Example value: (0)
I want an average value for the 'days_in_trade' column. Perhaps labeled "avg_days". Example value: (12)
I want an average value for the 'position_size' column. Perhaps labeled "avg_pos_size". Example value: (4,567.89)
I want a maximum value for the 'position_size' column. Perhaps labeled "max_pos_size". Example value: (10,567.89)
I want a minimum value for the 'position_size' column. Perhaps labeled "min_pos_size". Example value: (2,567.89)
I want a sum of the 'p_l' column values. Perhaps labeled "net_p_l". Example value: (3,850)

And so what I imagine the finished product to look like is a list or dataframe or array, with column headers or some sort of strings at the top to easily distinguish what each number is associated with. I imagine it's only going to be one single row of data since it's just a total summary of the trade results:

'column labels here or some way to signify which each number is.'
[387, 542, -155, 69, 0, 12, 4,567.89, 10,567.89, 2,567.89, 3,850]

If you can extract those things I want from the 'trade_results_dict' into a list or dataframe or array or something else, please give me the code that would produce the things I want to know.







